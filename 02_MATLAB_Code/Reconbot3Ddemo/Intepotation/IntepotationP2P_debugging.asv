function [ po_Intep ] =  IntepotationP2P(Mode, PosOri_previous,q0q1q2_previous_trajpoint, PosOri_current, q0q1q2_current_trajpoint, NumIntepoPoints, Time,l1, l2)

%% =================== Catisian Space Trajctory Planning ====================
PosOri = PosOri_current;
for i = 1:6
    if isempty(PosOri_previous{i}) == 1
        PosOri_previous{i} = 0;
    end
    if isempty(PosOri_current{i}) == 1
        PosOri_current{i} = 0;
    end
end
n = NumIntepoPoints;
for i = 1:length(PosOri)
    % Here uses to make sure the start singular configuration can go to the
    % selected first mode by adjusting q11 and q21
    if isempty(PosOri_current{i}) == 1  && i <= 6 
        po_Intep(i,:) = 0;
    else        
        if i == 7
            if isempty(PosOri_current{i}) == 1
                if length(PosOri_previous) == 8 && isempty(PosOri_previous{i}) ~= 1
                    PosOri_current{i} = PosOri_previous{i};
                else
                    PosOri_previous{i} = 0;
                    PosOri_current{i} = 0;
                end
            else
                if (length(PosOri_previous) ~= 8 && (Mode ~= 10 && Mode ~= 11)) || (length(PosOri_previous) == 8 && isempty(PosOri_previous{i}) == 1)
                    PosOri_previous{i} = PosOri_current{i};
                end
            end
        elseif i == 8 
            if isempty(PosOri_current{i}) == 1
                if length(PosOri_previous) == 8 && isempty(PosOri_previous{i}) ~= 1
                    PosOri_current{i} = PosOri_previous{i};
                else
                    PosOri_previous{i} = 0;
                    PosOri_current{i} = 0;
                end
            else
                if (length(PosOri_previous) ~= 8 && (Mode ~= 10 && Mode ~= 11)) || (length(PosOri_previous) == 8 && isempty(PosOri_previous{i}) == 1)
                    PosOri_previous{i} = PosOri_current{i};
                end
            end
        end
        %po_Intep(i,:) = linspace(PosOri_previous{i},PosOri_current{i}, n);
        PosOri = [PosOri_previous{i},PosOri_current{i}];
        v = [0, 0];
        a = [0, 0];
        t = Time;
        [ PosVelAcc ] = Intepotation(p, v, a, t);
        po_Intep(i,:) = PosVelAcc
    end
end

if Mode == 3
     po_Intep(1,:) = -l1/2 * sin(po_Intep(4,:));
     po_Intep(2,:) = l1/2 * (cos(po_Intep(4,:)) - 1);     
elseif Mode == 4     
     po_Intep(1,:) = l1/2 * sin(po_Intep(4,:));
     po_Intep(2,:) = l1/2 * (- cos(po_Intep(4,:)) + 1);    
end
%=============================== End ======================================

end

function [ PosVelAcc ] = Intepotation(p, v, a, t)

[ a0,a1,a2,a3,a4,a5,T ] = Polynom5(p, v, a, t) ;

t = linspace(0,T,100);
px = [a5,a4,a3,a2,a1,a0];
pxd = polyder(px);
pxdd = polyder(pxd);
Pos = polyval(px,t);
Vel = polyval(pxd,t);
Acc = polyval(pxdd,t);

end